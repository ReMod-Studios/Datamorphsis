# frozen_string_literal: true

require 'json'

CATEGORY_CONVERSIONS = { 'block' => 'tile' }.freeze

def process
  unless Dir.exists? input_dir
    log 'No language files found! Skipping...'
    return
  end

  inputs = Dir.children(input_dir)

  if inputs.size <= 0
    log 'No language files found! Skipping...'
    return
  end

  Dir.mkdir output_dir unless Dir.exists? output_dir

  log "Processing language files: (#{inputs.size})"

  inputs.each do |input|
    in_path = input_dir + input

    out_base_path = input.dup
    segments = out_base_path.delete_suffix('.json').split('_')
    segments.last.upcase!
    out_base_path = segments.join('_') + '.lang'
    out_path = File.join output_dir, out_base_path

    in_file = File.open(in_path, 'r')
    out_file = File.open(out_path, 'w+')

    log "Processing #{in_path} -> #{out_path}"

    lang_json = JSON.parse(in_file.read)

    header = <<~HEADER
    # generated file ~ manual changes will be overwritten!
    # generated by datamorphsis v0.1.0
    # source file: #{in_path.delete_prefix $IN}

    HEADER

    out_file.write header

    lang_json.each do |k, v|
      (category, ns, *rest) = k.split '.'

      # attempt to convert the category
      conv = CATEGORY_CONVERSIONS[category]
      category = conv unless conv.nil?

      out_file.write "#{category}.#{ns}:#{rest.join '.'}.name=#{v}\n"
    end
  end


  log 'Appending to languages.json'
  languages = inputs.map { |fn| fn.delete_suffix '.json' }
  File.write(File.join(output_dir, 'languages.json'), JSON.generate(languages))

  log 'Done processing language files'
end

